var fs = require("fs");
var path = require('path')
var Set = require('Set');
//var Channel = require('prometheus-channel')

var Modules = null;// dependency injected later on

var channels = {};
var channel_info = {};

var services = {};
var service_info = {};

var registred_injectables = new Set();

var Core = new function(){

	this.registerInjectable = function(injectable_name){
		registred_injectables.add(injectable_name);
	}

	function collect_module_settings(){
		var modules_dir = path.resolve(module.filename, "../../../prometheus-modules");
		var modules_dir_contents = fs.readdirSync(modules_dir);
		for(var i in modules_dir_contents){
			var current_module_path = path.resolve(modules_dir, modules_dir_contents[i]);
			Modules.loadPath(current_module_path);
		}
	}

	this.bootstrap = function(){
		collect_module_settings();
	}

	this.registerChannel = function(id, info, body){
		channel_info[id] = info;
		channels[id] = body;
	}

	this.registerService = function(id, info, body){
		service_info[id] = info;
		services[id] = body;
	}
	
	this.injectableIsRegistred = function(injectable_name){
		return registred_injectables.has(injectable_name);
	}

	this.getChannel = function(id){
		return channels[id];
	}

	this.getService = function(id){
		return services[id] || null;
	}

	this.getServices = function(){
		return services;
	}
}

module.exports = Core;
//!!important! export Core before importning Modules (circular dependency fail)
Modules = require("prometheus-module-manager");

