var FieldType= require("prometheus-field-type");
var ResourceTypeManager = require("prometheus-resource-type-manager");
var ResourceManager = require("prometheus-resource-manager");


/**
 * A field type. Connects resource type `from_type_name` with resource type `to_type_name`
 * @memberOf field-type-manager
 * @this {Association}
 * @param {string} from_type_name
 * @param {string} to_type_name
 * @class
 * @extends FieldType
 * @inner
 */
 var Association = function(from_type_name, to_type_name){
 	this.from_type_name = from_type_name;
 	this.to_type_name = to_type_name;
 }

/**
 * implements @link FieldType~isProperValue
 * @override
 * @this {Association}
 * @param  {any}  value
 * @return {Promise}
 */

 Association.prototype = Object.create(FieldType.prototype)

 Association.prototype.isProperValue = function(value){
 	if(typeof value=="number"){
 		ResourceManager.idExists(value, to_type);
 	}
 }

 Association.prototype.encode = function(value_in_code){
 	return new Promise(function(resolve, reject){
 		switch(typeof value_in_code){
 			case "number":
 				resolve(value_in_code);
 				break;
			case "object":
				resolve(value_in_code.prometheus_id);
				break;
			default:
				reject();
				break;
 		}
 	});
 }

 Association.prototype.decode = function(value_in_database){
 	return ResourceManager.getResourceByID(value_in_database);
 }

module.exports.field_type_name = "association";
module.exports.constructor = Association;