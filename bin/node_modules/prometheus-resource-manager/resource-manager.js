var DatabaseAccess = require("prometheus-database-accessor");
var metadata = require('prometheus-metadata-manager');
var ResourceTypeManager = require("prometheus-resource-type-manager");

/**
 * Manages resources in the database
 * @class 
 */
var ResourceManager = new function(){

	this.newResource = function(type_name, value, callback){
		console.log("creating new resource");
		console.log("Type", type_name, "value", value);

		ResourceTypeManager.enforce_correct_type_name(type_name);

		var resource_type_object = ResourceTypeManager.getByName(type_name);
		resource_type_object.validateFieldValues(value).then(
			function valid(){
				console.log("value valid!");
				resource_type_object.encodeFieldValues(value).then(function(encoded_values){
					metadata.increment("first_free_id", function(newID) {
						DatabaseAccess.query("resources", "insert", {prometheus_id: newID, type: type_name, body: encoded_values}, {}).then(function(data){
							callback(data);
						});
					});				
				});
			},
			function invalid(error){
				callback("error");
			}
		);
		
	}

	/**
	 * Calls callback function with `true` if a resource with given ID exists in the database. Otherwise, 
	 * @param  {Number}   prometheus_id 	the id to test for
	 * @param  {string}   [type] 			type of the resource. If provided, callback value will be true only if a resource with a given id AND of a provided type exists
	 * @param  {ResourceManager~idExistsCallback} callback
	 */
	this.idExists = function(prometheus_id, type_name, callback){
		if(arguments.length==2){
			callback = arguments[1];
			type_name = undefined;
		}
		var query = {
			prometheus_id: prometheus_id
		}
		if(type_name){
			ResourceTypeManager.enforce_correct_type_name(type_name);
			query.type = type_name;
		}
		DatabaseAccess.query("resources", "find", query, {}).then(function(response){
			if(response.length===0){
				callback(false);
			}else{
				callback(true);
			}
		})
	}

	/**
	 * Callback for idExists
	 * @callback ResourceManager~idExistsCallback
	 * @param {Boolean} exists - true if a resource with given id exists
	 */

	this.getResourceByID = function(resource_id, callback){
		var promise = DatabaseAccess.query("resources", "find", { prometheus_id: resource_id }, {})
		if(callback){
			promise.then(function(response){
				callback(response);
			})
		}else{
			return promise;
		}
	}

	this.getResourceByType = function(type_name, params, callback) {
		ResourceTypeManager.enforce_correct_type_name(type_name);
		type_name = type_name.toString();
		DatabaseAccess.query("resources", "find", { type: type_name }, {}, params).then(function(response) {
			callback(response);
		})
	}
}

module.exports = ResourceManager;