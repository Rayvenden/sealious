var fs = require("fs");
var ModuleInfo = require("./module-info.js");
var ChipManager = require("prometheus-chip-manager");
var Channel = require("prometheus-channel");
var Service = require("prometheus-service");

var Module = function(path_to_module){
	this.path = path_to_module;
	this.registred = false;
	this.executed = false;
	this.info = new ModuleInfo(path_to_module);
	this.id = this.info.id;
	this.body = require(path_to_module);
}

Module.prototype = new function(){

	this.generate_chip_action_method_name = function(chip_name, chip_type, action){
		var ret =  action + "_" + chip_type + "_" + chip_name;
		console.log(ret);
		return ret;
	}

	this.get_defined_chips_by_type = function(type){
		var ret = [];
		for(var i in this.info.defines){
			if(this.info.defines[i].indexOf(type)==0){
				ret.push(this.info.defines[i].split(".")[1]);
			}
		}
		return ret;
	}

	this.get_required_chips_by_type = function(type){
		var ret = [];
		for(var i in this.info.requires){
			if(this.info.requires[i].indexOf(type)==0){
				ret.push(this.info.requires[i].split(".")[1]);
			}
		}
		return ret;	
	}

	this.prepare_all_channel = function(){
		var channel_ids = this.get_defined_chips_by_type("channel");
		var dependencies = this.getDependencies();
		for(var i in channel_ids){
			var id = channel_ids[i];
			var channel_object = new Channel(id);
			var prepare_function_name = this.generate_chip_action_method_name(channel_ids[i], "channel", "prepare");
			if(this.body[prepare_function_name]){
				this.body[prepare_function_name](channel_object, dependencies);
			}
			ChipManager.registerChannel(channel_object);
		}
	}

	this.getDependencies = function(){
		var ret = [];
		var requires = this.info.requires;
		for(var i in requires){
			var required_id = requires[i];
			console.log(required_id);
			ret[required_id] = ChipManager.get_chip_by_long_id(required_id);
		}
		var defines = this.info.defines;
		for(var i in defines){
			var defined = defines[i];
			ret[defined] = ChipManager.get_chip_by_long_id(defined);
		}
		return ret;
	}

	this.prepare_all_service = function(){
		var service_ids = this.get_defined_chips_by_type("service");
		for(var i in service_ids){
			var service_id = service_ids[i];
			var service_object = new Service(service_id);
			var prepare_function_name = this.generate_chip_action_method_name(service_ids[i], "service", "prepare");
			if(this.body[prepare_function_name]){
				this.body[prepare_function_name](service_object);
			}
			ChipManager.registerService(service_object);
		}
	}

	this.start_all_service = function(){
		var service_ids = this.get_defined_chips_by_type("service");
		for(var i in service_ids){
			var service_id = service_ids[i];
			var service = ChipManager.getService(service_id);
			service.start();
		}
	}

	this.start_all_channel = function(){
		//run the "start" method of each defined channel
		var channel_ids = this.get_defined_chips_by_type("channel");
		for(var i in channel_ids){
			var channel_id = channel_ids[i];
			var channel = ChipManager.getChannel(channel_id);
			channel.start();
		}
		//also postprocess all channels required by this module
		var required_channel_ids = this.get_required_chips_by_type("channel");
		var dependencies = this.getDependencies();
		for(var i in required_channel_ids){
			channel_id = required_channel_ids[i];
			var postprocess_function_name = this.generate_chip_action_method_name(channel_id, "channel", "postprocess");
			var required_channel = ChipManager.getChannel(channel_id);
			var postprocess_function = this.body[postprocess_function_name]
			if(postprocess_function){
				postprocess_function(required_channel, dependencies);
			}
		}
	}

	this.prepare = function(chip_types){
		for(var i in chip_types){
			this["prepare_all_"+chip_types[i]]();
		}
	}

	this.start = function(chip_types){
		for(var i in chip_types){
			this["start_all_"+chip_types[i]]();
		}
	}
}

module.exports = Module;