/**
 * @module  field-type-manager
 */

var path = require("path");
var fs = require("fs");
var FieldType = require("prometheus-resource").FieldType;
var PrometheusError = require("prometheus-error");

/**
 * Stores and manages Field Types
 */
var FieldTypeManager = new function(){
	var all_field_type_constructors_by_name = [];

	this.addFieldTypeConstructor = function(field_type_constructor_data){
		var constructor = field_type_constructor_data.constructor;
		var field_type_name = field_type_constructor_data.field_type_name;
		if(!(constructor.prototype instanceof FieldType)){
			var err_message = "Argument passed to addFieldTypeConstructor does not have FieldType as a prototype";
			//var err = new Error("===FieldTypeManager error=== argument passed to addFieldTypeConstructor does not have FieldType as a prototype");
			//err.code = "not_a_field_type_instance";
			throw new PrometheusError (err_message, "not_a_field_type_instance", "field-type-manager");
		}
		
		all_field_type_constructors_by_name[field_type_name] = constructor;
	}

	this.getFieldTypeConstructorByName = function(field_type_name){
		var ret = all_field_type_constructors_by_name[field_type_name] || null;
		if(!ret){
			var err_message = "Got request for unknown field type: `" + field_type_name + "`";
			//var err = new Error("===FieldTypeManager error=== got request for unknown field type: `" + field_type_name + "`");
			throw new PrometheusError(err_message, "unknown_field_type_request", "field-type-manager");
		}
		return ret;
	}
}

/*
	Get field types from ./types
*/
var field_types_dir = path.resolve(__dirname, "./types");
var field_types_dir_contents = fs.readdirSync(field_types_dir);
for(var i in field_types_dir_contents){
	var current_type_path = path.resolve(field_types_dir, field_types_dir_contents[i]);
	var field_type_object = require(current_type_path);
	FieldTypeManager.addFieldTypeConstructor(field_type_object);
}

module.exports = FieldTypeManager;